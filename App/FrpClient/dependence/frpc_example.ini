#################
#    配置示例    #
################

# 要启动的(下列一下示例的)代理名称 , 默认为所有, 要启用 名称之间需要以","分割
# start = ssh,dns
# 代理配置示例, 请点击 DockerStore平台, FrpClient 编辑功能, 选择

### 字段说明 1 ###
# type : 连接协议 tcp | udp | http | https | stcp | xtcp, 默认 tcp
# local_ip : 本地IP, 也可以转发给局域网内的其他主机, 目前此版本在docker运行, 一般为局域网内的其他主机
# local_port : 本地端口
# bandwith_limit : 带宽限制, 单位为  KB | MB
# use_encryption : 客户端与服务端通信是否加密 true | false
# use_compression : 是否启用压缩
# remote_port : 想要占用的远程服务器端口 端口号 | 0 , 0 服务端会自动分配
# group : 分组名称, 定义后服务端将对同一组链接进行负载均衡
# group_key : 同一组, key必须相同
# health_check_type : 启用健康检查并设置健康检查类型, 现在支持'tcp'和'http'
# health_check_timeout_s : 健康检查超时时间, 秒
# health_check_max_failed : 健康检查超时次数, 如果超过此设置 代理将从frps中删除
# health_check_interval_s : 健康检查频率, 秒
# http_user : http用户名, 是 http 协议的安全认证
# http_pwd  : http密码, 如果未设置，则无需认证即可访问此
# subdomain : 如果 frps 配置的域是 youdomain.com, 则可以使用配置的值访问, 例如: 配置 web01, 则可以使用 web01.youdomain.com 访问
# custom_domains : 自定义域名, 配置好后可以使用此域名访问,例如: web02.mydomain.com
# locations : 限定HTTP访问目录
# host_header_rewrite : 重写主机header
# header_X-From-Where : 带有 header_ 前缀的参数, 将用于更新http请求标头
# health_check_url : http 健康检查点, 此地址必须返回状态为http 200 否则为健康检查失败
# proxy_protocol_version : 指定传输协议版本

# 定义一个 ssh 连接
[myssh]
type = tcp
local_ip = 127.0.0.1
local_port = 22
bandwith_limit = 1MB
use_encryption = false
use_compression = false
remote_port = 6001
group = test_group
group_key = 123456
health_check_type = tcp
health_check_timeout_s = 3
health_check_max_failed = 3
health_check_interval_s = 10

# 自定义一个 随机端口的ssh连接
[myssh_random]
type = tcp
local_ip = 127.0.0.1
local_port = 22
remote_port = 0

# 如果要公开多个端口, 需要节名称前添加"range:" 前缀
# frpc将生成多个代理, 例如'tcp_port_6010', 'tcp_port_6011'等
[range:tcp_port]
type = tcp
local_ip = 127.0.0.1
local_port = 6010-6020,6022,6024-6028
remote_port = 6010-6020,6022,6024-6028
use_encryption = false
use_compression = false

# DNS代理
[mydns]
type = udp
local_ip = 114.114.114.114
local_port = 53
remote_port = 6002
use_encryption = false
use_compression = false

# 公开多个UDP端口
[range:udp_port]
type = udp
local_ip = 127.0.0.1
local_port = 6010-6020
remote_port = 6010-6020
use_encryption = false
use_compression = false

# 定义一个 http 连接
[web01]
type = http
local_ip = 127.0.0.1
local_port = 80
use_encryption = false
use_compression = true
http_user = admin
http_pwd = admin
subdomain = web01
custom_domains = web02.mydomain.com
locations = /,/pic
host_header_rewrite = example.com
header_X-From-Where = frp
health_check_type = http
health_check_url = /status
health_check_interval_s = 10
health_check_max_failed = 3
health_check_timeout_s = 3

# 定义一个 https 连接
[web02]
type = https
local_ip = 127.0.0.1
local_port = 8000
use_encryption = false
use_compression = false
subdomain = web01
custom_domains = web02.yourdomain.com
proxy_protocol_version = v2